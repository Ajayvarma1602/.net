1.Find the difference between TryParse, Parse,and Convert

Parse:

  Parse() method throws an exception if it cannot parse the value

TryParse:

  TryParse() method returns a bool indicating whether it succeeded.

  TryParse does not return the value, it returns a status code to indicate whether the parse succeeded and does not throw exception.



2.Find the default range and size of default datatypes


Type	Represents	                     Range	                                                 Default Value

bool	Boolean value                	True or False	                                                        False

byte	8-bit unsigned integer	           0 to 255	                                                           0

char	16-bit Unicode character	U +0000 to U +ffff	                                                 '\0'

decimal	128-bit precise decimal values 
        with 28-29 significant digits	(-7.9 x 1028 to 7.9 x 1028) / 100 to 28	                                  0.0M 

double	64-bit double-precision 
            floating point type  	(+/-)5.0 x 10-324 to (+/-)1.7 x 10308	                                  0.0D

float	32-bit single-precision 
          floating point type	        -3.4 x 1038 to + 3.4 x 1038	                                          0.0F

int	32-bit signed integer type	-2,147,483,648 to 2,147,483,647                                            0

long	64-bit signed integer type	-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807	                   0L

sbyte	8-bit signed integer type	-128 to 127	                                                           0

short	16-bit signed integer type	-32,768 to 32,767	                                                   0

uint	32-bit unsigned integer type	0 to 4,294,967,295	                                                   0

ulong	64-bit unsigned integer type	0 to 18,446,744,073,709,551,615	                                           0

ushort	16-bit unsigned integer type	0 to 65,535	                                                           0


3.Explore the String methods.

   Method Name	Description
Clone(): It is used to return a reference to this instance of String.

Compare(String, String)	It is used to compares two specified String objects. It returns an integer that indicates their relative position in the sort order.

CompareOrdinal(String, String)	It is used to compare two specified String objects by evaluating the numeric values of the corresponding Char objects in each string..

CompareTo(String)	It is used to compare this instance with a specified String object. It indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified string.

Concat(String, String)	It is used to concatenate two specified instances of String.

Contains(String)	It is used to return a value indicating whether a specified substring occurs within this string.

Copy(String)	It is used to create a new instance of String with the same value as a specified String.

CopyTo(Int32, Char[], Int32, Int32)	It is used to copy a specified number of characters from a specified position in this instance to a specified position in an array of Unicode characters.

EndsWith(String)	It is used to check that the end of this string instance matches the specified string.

Equals(String, String)	It is used to determine that two specified String objects have the same value.

Format(String, Object)	It is used to replace one or more format items in a specified string with the string representation of a specified object.

GetEnumerator()	It is used to retrieve an object that can iterate through the individual characters in this string.

GetHashCode()	It returns the hash code for this string.

GetType()	It is used to get the Type of the current instance.

GetTypeCode()	It is used to return the TypeCode for class String.

IndexOf(String)	It is used to report the zero-based index of the first occurrence of the specified string in this instance.

Insert(Int32, String)	It is used to return a new string in which a specified string is inserted at a specified index position.

Intern(String)	It is used to retrieve the system's reference to the specified String.

IsInterned(String)	It is used to retrieve a reference to a specified String.

IsNormalized()	It is used to indicate that this string is in Unicode normalization form C.

IsNullOrEmpty(String)	It is used to indicate that the specified string is null or an Empty string.

IsNullOrWhiteSpace(String)	It is used to indicate whether a specified string is null, empty, or consists only of white-space characters.

Join(String, String[])	It is used to concatenate all the elements of a string array, using the specified separator between each element.

LastIndexOf(Char)	It is used to report the zero-based index position of the last occurrence of a specified character within String.

LastIndexOfAny(Char[])	It is used to report the zero-based index position of the last occurrence in this instance of one or more characters specified in a Unicode array.

Normalize()	It is used to return a new string whose textual value is the same as this string, but whose binary representation is in Unicode normalization form C.

PadLeft(Int32)	It is used to return a new string that right-aligns the characters in this instance by padding them with spaces on the left.

PadRight(Int32)	It is used to return a new string that left-aligns the characters in this string by padding them with spaces on the right.

Remove(Int32)	It is used to return a new string in which all the characters in the current instance, beginning at a specified position and continuing through the last position, have been deleted.

Replace(String, String)	It is used to return a new string in which all occurrences of a specified string in the current instance are replaced with another specified string.

Split(Char[])	It is used to split a string into substrings that are based on the characters in an array.

StartsWith(String)	It is used to check whether the beginning of this string instance matches the specified string.

Substring(Int32)	It is used to retrieve a substring from this instance. The substring starts at a specified character position and continues to the end of the string.

ToCharArray()	It is used to copy the characters in this instance to a Unicode character array.

ToLower()	It is used to convert String into lowercase.

ToLowerInvariant()	It is used to return convert String into lowercase using the casing rules of the invariant culture.

ToString()	It is used to return instance of String.

ToUpper()	It is used to convert String into uppercase.

Trim()	It is used to remove all leading and trailing white-space characters from the current String object.

TrimEnd(Char[])	It Is used to remove all trailing occurrences of a set of characters specified in an array from the current String object.

TrimStart(Char[])	It is used to remove all leading occurrences of a set of characters specified in an array from the current String object.

